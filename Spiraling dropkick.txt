local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Set speed and jump power to 0
humanoid.WalkSpeed = 0
humanoid.JumpPower = 0
wait(0.2)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Animation 1
do
    local animation = Instance.new("Animation")
    animation.AnimationId = "rbxassetid://183294396"
    local animationTrack = humanoid:LoadAnimation(animation)
    local fadeTime = 0.5
    animationTrack:Play(fadeTime)
    animationTrack.TimePosition = 0
    animationTrack:AdjustSpeed(1)
    task.delay(0.5, function()
        animationTrack:Stop(fadeTime)
    end)
end

-- Animation 2
do
    local animation = Instance.new("Animation")
    animation.AnimationId = "rbxassetid://180416148"
    local animationTrack = humanoid:LoadAnimation(animation)
    local fadeTime = 0.4
    animationTrack:Play(fadeTime)
    animationTrack.TimePosition = 0
    animationTrack:AdjustSpeed(0)
    task.delay(0.5, function()
        animationTrack:Stop(fadeTime)
    end)
end

-- Animation 3 (Lean forward movement)
do
    local hum = character.Humanoid
    local animation = Instance.new("Animation")
    animation.AnimationId = "rbxassetid://180436334"
    local track = hum:LoadAnimation(animation)
    track:Play(1, 5, 1)
    track:AdjustSpeed(0.01)

    local hrp = character:WaitForChild("HumanoidRootPart")
    local cfr = hrp.CFrame
    local start = tick()
    while tick() - start < 0.6 do
        task.wait()
        hrp.CFrame = cfr * CFrame.Angles(math.rad(-30), 0, 0) * CFrame.new(0, 0, -2.5)
        hrp.Velocity = Vector3.zero
        hrp.RotVelocity = Vector3.zero
    end
    track:Stop()
end

-- Frontflip
do
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local leapDistance =0 -- Distance to leap in studs
local leapHeight = 30 -- Adjust this value to control how high the player jumps

local function leapForward()
    -- Create a BodyVelocity to apply the leap
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = rootPart.CFrame.lookVector * leapDistance + Vector3.new(0, leapHeight, 0)
    bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000) -- Adjust as needed
    bodyVelocity.P = 5000 -- Adjust the power of the force
    bodyVelocity.Parent = rootPart

    -- Remove the BodyVelocity after a short time to prevent continuous motion
    game:GetService("Debris"):AddItem(bodyVelocity, 0.2)
end
leapForward()
    local animation = Instance.new("Animation")
    animation.AnimationId = "rbxassetid://235542946"
    local animationTrack = humanoid:LoadAnimation(animation)
    local fadeTime = 0.1
    animationTrack.TimePosition = 0
    animationTrack:AdjustSpeed(3)
    animationTrack:Play(fadeTime)
    task.delay(0.5, function()
        animationTrack:Stop(fadeTime)
    end)
end

-- Backflip (with spin)
do
    local frontflipAnimation = Instance.new("Animation")
    frontflipAnimation.AnimationId = "rbxassetid://0" -- Replace with valid ID
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    local animTrack = humanoid:LoadAnimation(frontflipAnimation)
    animTrack:Play()
    wait()
    humanoid.Sit = true
    for i = 1, 360 do
        delay(i / 720, function()
            humanoid.Sit = true
            character.HumanoidRootPart.CFrame *= CFrame.Angles(-math.rad(1), 0, 0)
        end)
    end
    wait(0.55)
    humanoid.Sit = false
end

-- Leap forward
do
    local rootPart = character:WaitForChild("HumanoidRootPart")
    local leapDistance = 150
    local leapHeight = 0
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = rootPart.CFrame.lookVector * leapDistance + Vector3.new(0, leapHeight, 0)
    bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
    bodyVelocity.P = 5000
    bodyVelocity.Parent = rootPart
    game:GetService("Debris"):AddItem(bodyVelocity, 0.2)
end

-- Freeze Frame Animations
local freezeAnimations = {
    "327324663",
    "60816255",
    "56146409"
}

for _, animId in ipairs(freezeAnimations) do
    local animation = Instance.new("Animation")
    animation.AnimationId = "rbxassetid://" .. animId
    local animationTrack = humanoid:LoadAnimation(animation)
    local fadeTime = 0.2
    animationTrack.TimePosition = 0
    animationTrack:AdjustSpeed(0)
    animationTrack:Play(fadeTime)
    task.delay(0.4, function()
        animationTrack:Stop(fadeTime)
    end)
end
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local leapDistance = 25 -- Distance to leap in studs
local leapHeight = 205 -- Adjust this value to control how high the player jumps

local function leapForward()
    -- Create a BodyVelocity to apply the leap
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = rootPart.CFrame.lookVector * leapDistance + Vector3.new(0, leapHeight, 0)
    bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000) -- Adjust as needed
    bodyVelocity.P = 5000 -- Adjust the power of the force
    bodyVelocity.Parent = rootPart

    -- Remove the BodyVelocity after a short time to prevent continuous motion
    game:GetService("Debris"):AddItem(bodyVelocity, 0.2)
end
leapForward()
Wait(0.1)
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local function restoreDefaults(humanoid)
	humanoid.WalkSpeed = 16
	humanoid.JumpPower = 50
end

local function onCharacterAdded(character)
	local humanoid = character:WaitForChild("Humanoid")
	restoreDefaults(humanoid)
end

-- If the character already exists
if player.Character then
	onCharacterAdded(player.Character)
end

-- Restore on respawn
player.CharacterAdded:Connect(onCharacterAdded)