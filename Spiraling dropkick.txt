
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://97170520"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.2
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0.5
animationTrack:AdjustSpeed(0)

task.delay(0.5, function()
    animationTrack:Stop(fadeTime)
end)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local leapDistance = -40 -- Distance to leap in studs
local leapHeight = 45 -- Adjust this value to control how high the player jumps

local function leapForward()
    -- Create a BodyVelocity to apply the leap
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = rootPart.CFrame.lookVector * leapDistance + Vector3.new(0, leapHeight, 0)
    bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000) -- Adjust as needed
    bodyVelocity.P = 5000 -- Adjust the power of the force
    bodyVelocity.Parent = rootPart

    -- Remove the BodyVelocity after a short time to prevent continuous motion
    game:GetService("Debris"):AddItem(bodyVelocity, 0.2)
end
leapForward()
wait(0.5)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://235542946"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.1
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0
animationTrack:AdjustSpeed(3)

task.delay(0.2, function()
    animationTrack:Stop(fadeTime)
end)
local c = game.Players.LocalPlayer.Character
local hum = c.Humanoid

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://0" -- Replace with your animation ID
local track = hum:LoadAnimation(animation)
track:Play(1, 5, 1)
track:AdjustSpeed(0.01)

local hrp = c.HumanoidRootPart
local cfr = hrp.CFrame

local tiltAngle = -80 -- Positive is right, negative is left, 0 is normal

local start = tick()
while tick() - start < 0.2 do
	task.wait()
	hrp.CFrame = cfr * CFrame.Angles(0, 0, math.rad(-tiltAngle)) -- Apply tilt
	hrp.Velocity = Vector3.zero
	hrp.RotVelocity = Vector3.zero
end

-- Return to normal tilt (0)
hrp.CFrame = cfr -- Restore original orientation

track:Stop()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local rootPart = character:WaitForChild("HumanoidRootPart")
local leapDistance = 150 -- Distance to leap in studs
local leapHeight = -95 -- Adjust this value to control how high the player jumps

local function leapForward()
    -- Create a BodyVelocity to apply the leap
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = rootPart.CFrame.lookVector * leapDistance + Vector3.new(0, leapHeight, 0)
    bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000) -- Adjust as needed
    bodyVelocity.P = 5000 -- Adjust the power of the force
    bodyVelocity.Parent = rootPart

    -- Remove the BodyVelocity after a short time to prevent continuous motion
    game:GetService("Debris"):AddItem(bodyVelocity, 0.2)
end
leapForward()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://327324663"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.2
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0.5
animationTrack:AdjustSpeed(0)

task.delay(0.2, function()
    animationTrack:Stop(fadeTime)
end)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://287325678"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.1
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0.5
animationTrack:AdjustSpeed(0)

task.delay(0.5, function()
    animationTrack:Stop(fadeTime)
end)
Wait(0.25)
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function teleportToNearbyPlayer()
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local targetHRP = player.Character.HumanoidRootPart
			local distance = (hrp.Position - targetHRP.Position).Magnitude

			if distance <= 25 then
				-- Teleport the local player to the nearby player
				hrp.CFrame = targetHRP.CFrame + Vector3.new(0, 3, 0) -- offset upward to avoid overlapping
				break
			end
		end
	end
end

-- Run it once after character is loaded
teleportToNearbyPlayer()
