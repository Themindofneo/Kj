local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")

-- Settings
local GLOW_COLOR = Color3.new(1, 1, 1)
local GLOW_INTENSITY = 1
local GLOW_RANGE = 10
local DURATION = 9.5

-- Utility: Check if part is unanchored or belongs to a player/NPC
local function shouldGlow(obj)
	if obj:IsA("Model") then
		local humanoid = obj:FindFirstChildOfClass("Humanoid")
		return humanoid and obj ~= LocalPlayer.Character
	elseif obj:IsA("BasePart") then
		return not obj.Anchored
	end
	return false
end

-- Apply highlight
local highlights = {}

for _, obj in ipairs(Workspace:GetDescendants()) do
	if shouldGlow(obj) then
		local target = obj:IsA("Model") and obj or obj.Parent
		if target and not highlights[target] then
			local hl = Instance.new("Highlight")
			hl.Adornee = target
			hl.FillTransparency = 1
			hl.OutlineColor = GLOW_COLOR
			hl.OutlineTransparency = 0
			hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
			hl.Parent = target
			highlights[target] = hl
		end
	end
end

-- Cleanup after 9.5 seconds
task.delay(DURATION, function()
	for _, hl in pairs(highlights) do
		if hl and hl.Parent then
			hl:Destroy()
		end
	end
end)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local animation = Instance.new("Animation")
animation.AnimationId = "rbxassetid://99196838"

local animationTrack = humanoid:LoadAnimation(animation)

local fadeTime = 0.2
animationTrack:Play(fadeTime)
animationTrack.TimePosition = 0.5
animationTrack:AdjustSpeed(0)

task.delay(2, function()
    animationTrack:Stop(fadeTime)
end)
wait(0.2)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local FREEZE_START_DISTANCE = 1000
local WALL_DISTANCE = 1
local PUSH_FORCE = 100000
local PUSH_OUT_SPEED = 150

local function getNearbyUnanchoredParts(centerPos, range)
	local region = Region3.new(centerPos - Vector3.new(range, range, range), centerPos + Vector3.new(range, range, range))
	local parts = workspace:FindPartsInRegion3WithIgnoreList(region, {player.Character}, math.huge)
	local valid = {}

	for _, part in ipairs(parts) do
		if part:IsA("BasePart") and not part.Anchored and not part:IsDescendantOf(player.Character) then
			table.insert(valid, part)
		end
	end
	return valid
end

local active = true

local function heartbeatStep()
	if not active then return end

	local character = player.Character
	if not character then return end

	local hrp = character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	local playerPos = hrp.Position
	local parts = getNearbyUnanchoredParts(playerPos, FREEZE_START_DISTANCE + 5)

	for _, part in ipairs(parts) do
		local offset = part.Position - playerPos
		local distance = offset.Magnitude

		local velocityControl = part:FindFirstChild("RepelForce")
		if not velocityControl then
			velocityControl = Instance.new("BodyVelocity")
			velocityControl.Name = "RepelForce"
			velocityControl.MaxForce = Vector3.new(PUSH_FORCE, PUSH_FORCE, PUSH_FORCE)
			velocityControl.P = 4000000
			velocityControl.Parent = part
		end

		if distance <= WALL_DISTANCE then
			local direction = offset.Unit
			velocityControl.Velocity = direction * PUSH_OUT_SPEED

		elseif distance <= FREEZE_START_DISTANCE then
			local currentVelocity = part.AssemblyLinearVelocity
			local factor = math.clamp((distance - WALL_DISTANCE) / (FREEZE_START_DISTANCE - WALL_DISTANCE), 0, 1)
			velocityControl.Velocity = currentVelocity * factor

		else
			if velocityControl then
				velocityControl:Destroy()
			end
		end
	end
end

-- Run loop
local conn = RunService.Heartbeat:Connect(heartbeatStep)

-- Stop everything after 9.5 seconds
task.delay(9.5, function()
	active = false
	if conn then conn:Disconnect() end

	-- Clean up all "RepelForce" objects
	for _, part in ipairs(workspace:GetDescendants()) do
		if part:IsA("BodyVelocity") and part.Name == "RepelForce" then
			part:Destroy()
		end
	end
end)

-- Stop if player resets or dies
local function stopScript()
	active = false
	if conn then conn:Disconnect() end
end

player.CharacterAdded:Connect(stopScript)

if player.Character then
	local hum = player.Character:FindFirstChild("Humanoid")
	if hum then
		hum.Died:Connect(stopScript)
	end
end

player.CharacterAdded:Connect(function(char)
	local hum = char:WaitForChild("Humanoid", 5)
	if hum then
		hum.Died:Connect(stopScript)
	end
end)

task.spawn(function()
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()

	local highlight = Instance.new("Highlight")
	highlight.Name = "WhiteOutlineOnly"
	highlight.FillTransparency = 1 -- Fully transparent fill
	highlight.OutlineTransparency = 0 -- Fully visible outline
	highlight.OutlineColor = Color3.new(1, 1, 1) -- White outline
	highlight.Adornee = character
	highlight.Parent = character

	task.delay(9.8, function()
		if highlight and highlight.Parent then
			highlight:Destroy()
		end
	end)
end)

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local fadeTime, tweenTime = 0.5, 0.5
local imageId = "rbxassetid://133329932870887"

local function createBillboard(offset, text)
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")

	local bb = Instance.new("BillboardGui")
	bb.Adornee = hrp
	bb.Size = UDim2.fromScale(5, 5)
	bb.StudsOffset = offset
	bb.AlwaysOnTop = true
	bb.Parent = character

	local img = Instance.new("ImageLabel")
	img.Size = UDim2.fromScale(0.77, 0.77)
	img.Position = UDim2.fromScale(0.115, 0.115)
	img.Image = imageId
	img.BackgroundTransparency = 1
	img.Parent = bb

	local txt = Instance.new("TextLabel")
	txt.Size = UDim2.fromScale(0.59, 0.59)
	txt.Position = UDim2.fromScale(0.205, 0.205)
	txt.BackgroundTransparency = 1
	txt.TextScaled = true
	txt.Font = Enum.Font.SpecialElite -- MANGA-LIKE FONT
	txt.TextColor3 = Color3.new()
	txt.TextStrokeTransparency = 1
	txt.Text = text
	txt.Parent = img

	task.spawn(function()
		task.wait(3)
		TweenService:Create(bb, TweenInfo.new(tweenTime, Enum.EasingStyle.Quad), {
			StudsOffset = bb.StudsOffset + Vector3.new((offset.X > 0 and 1 or -1) * 16, 0, 0)
		}):Play()

		for i = 0, 1, 1 / (fadeTime * 60) do
			img.ImageTransparency = i
			txt.TextTransparency = i
			task.wait(0.5 / 60)
		end

		bb:Destroy()
	end)
end

local function triggerBillboards()
	createBillboard(Vector3.new(-5, 0, 0), "... Domain expansion.       ...")
	createBillboard(Vector3.new(5, 0, 0), "... UNLIMITED VOID!!!!")
end

if player.Character then
	triggerBillboards()
else
	player.CharacterAdded:Once(triggerBillboards)
end


local soundId = "rbxassetid://6667923288"

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Create and play the sound
local sound = Instance.new("Sound")
sound.SoundId = soundId
sound.Parent = game.Workspace  -- Parent the sound to the Workspace
sound.Volume = 4  -- Adjust the volume if needed
sound:Play()

-- Set the properties for the sound
sound.PlaybackSpeed = 1  -- Set speed to 1
sound.TimePosition = 0.5 -- Set start time to 1 second




local Lighting = game:GetService("Lighting")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")

local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- Save original sky
local savedSky = Lighting:FindFirstChildOfClass("Sky") and Lighting:FindFirstChildOfClass("Sky"):Clone()

-- Helper: play 3D sound
local function play3DSound(id, vol)
	local s = Instance.new("Sound")
	s.SoundId = "rbxassetid://" .. id
	s.Volume = vol or 1
	s.Parent = workspace
	s:Play()
	Debris:AddItem(s, 10)
end

-- Clear any existing skies
for _, v in ipairs(Lighting:GetChildren()) do
	if v:IsA("Sky") then v:Destroy() end
end

-- Sky 1 (initial)
local sky1 = Instance.new("Sky", Lighting)
for _, face in ipairs({"Bk", "Dn", "Ft", "Lf", "Rt", "Up"}) do
	sky1["Skybox"..face] = "rbxassetid://133742659542849"
end

-- Fade 1
local cc1 = Instance.new("ColorCorrectionEffect", Lighting)
cc1.TintColor = Color3.new(0, 0, 0)
cc1.Brightness = -1
TweenService:Create(cc1, TweenInfo.new(0.8), {TintColor = Color3.new(1,1,1), Brightness = 0}):Play()
task.wait(0.8)
cc1:Destroy()
sky1:Destroy()

-- Sky 2 (main)
local sky2 = Instance.new("Sky", Lighting)
for _, face in ipairs({"Bk", "Dn", "Ft", "Lf", "Rt", "Up"}) do
	sky2["Skybox"..face] = "rbxassetid://129746135623487"
end
sky2.SunTextureId = ""
sky2.MoonTextureId = ""

-- Fade 2
local cc2 = Instance.new("ColorCorrectionEffect", Lighting)
cc2.TintColor = Color3.new(0, 0, 0)
cc2.Brightness = -1
TweenService:Create(cc2, TweenInfo.new(0.8), {TintColor = Color3.new(1,1,1), Brightness = 0}):Play()
task.delay(0.8, function() cc2:Destroy() end)

-- Play audio sequence
task.spawn(function()
	play3DSound("122261039674349", 5)
	play3DSound("7652527370", 1)
	play3DSound("127117086239111", 2)
	play3DSound("76786040776528", 3)
	play3DSound("8737379396", 0.5)
	play3DSound("3276835551", 1)
	task.wait(0.5)
	play3DSound("0", 4)
	play3DSound("7390331288", 2)
end)

-- Fake sun setup
local sun = Instance.new("Part", workspace)
sun.Name = "FakeSun"
sun.Anchored, sun.CanCollide, sun.CastShadow, sun.Transparency = true, false, false, 1
sun.Size = Vector3.new(1, 1, 1)

local sunGui = Instance.new("BillboardGui", sun)
sunGui.Name = "SunBillboard"
sunGui.Size = UDim2.new(0, 3000, 0, 3000)
sunGui.AlwaysOnTop = true
sunGui.LightInfluence = 0

local sunImage = Instance.new("ImageLabel", sunGui)
sunImage.Size = UDim2.new(1, 0, 1, 0)
sunImage.BackgroundTransparency = 1
sunImage.Image = "rbxassetid://0" -- No actual image

-- X-ray filtering
local function isValidTarget(part)
	if not part:IsA("BasePart") or not part.Anchored then return false end
	local model = part:FindFirstAncestorOfClass("Model")
	if model and model:FindFirstChildOfClass("Humanoid") then return false end
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr.Character and part:IsDescendantOf(plr.Character) then return false end
	end
	return true
end

local hiddenParts = {}
for _, p in ipairs(workspace:GetDescendants()) do
	if isValidTarget(p) then
		p.Transparency, p.CastShadow = 1, false
		table.insert(hiddenParts, p)
	end
end

-- Maintain x-ray effect
local xrayConn = RunService.Stepped:Connect(function()
	for _, p in ipairs(hiddenParts) do
		if p:IsA("BasePart") then
			p.Transparency = 1
			p.CastShadow = false
		end
	end
end)

-- Update fake sun position
local sunConn = RunService.RenderStepped:Connect(function()
	local cam = workspace.CurrentCamera
	if cam then
		sun.Position = cam.CFrame.Position + Lighting:GetSunDirection() * 10000
	end
end)

-- Revert after 9 seconds
task.delay(9, function()
	sky2:Destroy()
	if savedSky then savedSky.Parent = Lighting end

	for _, p in ipairs(hiddenParts) do
		if p:IsA("BasePart") then
			p.Transparency = 0
			p.CastShadow = true
		end
	end

	xrayConn:Disconnect()
	sunConn:Disconnect()

	local gui = sun:FindFirstChild("SunBillboard")
	if gui then gui:Destroy() end

	for _, e in ipairs(Lighting:GetChildren()) do
		if e:IsA("ColorCorrectionEffect") then e:Destroy() end
	end
end)
Wait(8.5)
local soundId = "rbxassetid://7486846874"

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Create and play the sound
local sound = Instance.new("Sound")
sound.SoundId = soundId
sound.Parent = game.Workspace  -- Parent the sound to the Workspace
sound.Volume = 4  -- Adjust the volume if needed
sound:Play()

-- Set the properties for the sound
sound.PlaybackSpeed = 0.9  -- Set speed to 1
sound.TimePosition = 0 -- Set start time to 1 second 